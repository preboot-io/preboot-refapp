/**
 * Generated by orval v7.4.1 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import type {
  CreateInactiveUserAccountRequest,
  PageUserAccountInfo,
  SearchRequest,
  UserAccountInfo
} from '../../models'
import { axiosInstanceFunc } from '../../../utils/axios';



  export const getSuperAdminUserController = () => {
const addRole = (
    userId: string,
    tenantId: string,
    roleName: string,
 ) => {
      return axiosInstanceFunc<UserAccountInfo>(
      {url: `/api/super-admin/users/${userId}/tenant/${tenantId}/roles/${roleName}`, method: 'POST'
    },
      );
    }
  const removeRole = (
    userId: string,
    tenantId: string,
    roleName: string,
 ) => {
      return axiosInstanceFunc<UserAccountInfo>(
      {url: `/api/super-admin/users/${userId}/tenant/${tenantId}/roles/${roleName}`, method: 'DELETE'
    },
      );
    }
  const createUserForTenant = (
    tenantId: string,
    createInactiveUserAccountRequest: CreateInactiveUserAccountRequest,
 ) => {
      return axiosInstanceFunc<UserAccountInfo>(
      {url: `/api/super-admin/users/tenant/${tenantId}`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createInactiveUserAccountRequest
    },
      );
    }
  const getTenantUsers = (
    tenantId: string,
    searchRequest: SearchRequest,
 ) => {
      return axiosInstanceFunc<PageUserAccountInfo>(
      {url: `/api/super-admin/users/tenant/${tenantId}/search`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: searchRequest
    },
      );
    }
  const searchAllUsers = (
    searchRequest: SearchRequest,
 ) => {
      return axiosInstanceFunc<PageUserAccountInfo>(
      {url: `/api/super-admin/users/search`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: searchRequest
    },
      );
    }
  const getUser = (
    userId: string,
    tenantId: string,
 ) => {
      return axiosInstanceFunc<UserAccountInfo>(
      {url: `/api/super-admin/users/${userId}/tenant/${tenantId}`, method: 'GET'
    },
      );
    }
  const removeUserFromTenant = (
    userId: string,
    tenantId: string,
 ) => {
      return axiosInstanceFunc<void>(
      {url: `/api/super-admin/users/${userId}/tenant/${tenantId}`, method: 'DELETE'
    },
      );
    }
  return {addRole,removeRole,createUserForTenant,getTenantUsers,searchAllUsers,getUser,removeUserFromTenant}};
export type AddRoleResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSuperAdminUserController>['addRole']>>>
export type RemoveRoleResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSuperAdminUserController>['removeRole']>>>
export type CreateUserForTenantResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSuperAdminUserController>['createUserForTenant']>>>
export type GetTenantUsersResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSuperAdminUserController>['getTenantUsers']>>>
export type SearchAllUsersResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSuperAdminUserController>['searchAllUsers']>>>
export type GetUserResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSuperAdminUserController>['getUser']>>>
export type RemoveUserFromTenantResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSuperAdminUserController>['removeUserFromTenant']>>>
