/**
 * Generated by orval v7.4.1 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import type {
  AuthResponse,
  PasswordLoginRequest,
  TenantInfo,
  UseTenantRequest,
  UserAccountInfo
} from '../../models'
import { axiosInstanceFunc } from '../../../utils/axios';



  export const getAuthController = () => {
const setCurrentUserTenant = (
    useTenantRequest: UseTenantRequest,
 ) => {
      return axiosInstanceFunc<AuthResponse>(
      {url: `/api/auth/use-tenant`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: useTenantRequest
    },
      );
    }
  const refresh = (
    
 ) => {
      return axiosInstanceFunc<AuthResponse>(
      {url: `/api/auth/refresh`, method: 'POST'
    },
      );
    }
  const logout = (
    
 ) => {
      return axiosInstanceFunc<void>(
      {url: `/api/auth/logout`, method: 'POST'
    },
      );
    }
  const login = (
    passwordLoginRequest: PasswordLoginRequest,
 ) => {
      return axiosInstanceFunc<AuthResponse>(
      {url: `/api/auth/login`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: passwordLoginRequest
    },
      );
    }
  const getCurrentUserTenants = (
    
 ) => {
      return axiosInstanceFunc<TenantInfo[]>(
      {url: `/api/auth/my-tenants`, method: 'GET'
    },
      );
    }
  const getCurrentUserAccount = (
    
 ) => {
      return axiosInstanceFunc<UserAccountInfo>(
      {url: `/api/auth/me`, method: 'GET'
    },
      );
    }
  return {setCurrentUserTenant,refresh,logout,login,getCurrentUserTenants,getCurrentUserAccount}};
export type SetCurrentUserTenantResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getAuthController>['setCurrentUserTenant']>>>
export type RefreshResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getAuthController>['refresh']>>>
export type LogoutResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getAuthController>['logout']>>>
export type LoginResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getAuthController>['login']>>>
export type GetCurrentUserTenantsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getAuthController>['getCurrentUserTenants']>>>
export type GetCurrentUserAccountResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getAuthController>['getCurrentUserAccount']>>>
