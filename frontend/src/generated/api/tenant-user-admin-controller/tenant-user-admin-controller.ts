/**
 * Generated by orval v7.4.1 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import type {
  CreateInactiveUserAccountRequest,
  PageUserAccountInfo,
  SearchRequest,
  TenantUserAssignRequest,
  UserAccountInfo
} from '../../models'
import { axiosInstanceFunc } from '../../../utils/axios';



  export const getTenantUserAdminController = () => {
const updateUserRoles = (
    userId: string,
    tenantUserAssignRequest: TenantUserAssignRequest,
 ) => {
      return axiosInstanceFunc<UserAccountInfo>(
      {url: `/api/tenant/users/${userId}/roles`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: tenantUserAssignRequest
    },
      );
    }
  const createUser = (
    createInactiveUserAccountRequest: CreateInactiveUserAccountRequest,
 ) => {
      return axiosInstanceFunc<UserAccountInfo>(
      {url: `/api/tenant/users`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createInactiveUserAccountRequest
    },
      );
    }
  const addRole = (
    userId: string,
    roleName: string,
 ) => {
      return axiosInstanceFunc<UserAccountInfo>(
      {url: `/api/tenant/users/${userId}/roles/${roleName}`, method: 'POST'
    },
      );
    }
  const removeRole = (
    userId: string,
    roleName: string,
 ) => {
      return axiosInstanceFunc<UserAccountInfo>(
      {url: `/api/tenant/users/${userId}/roles/${roleName}`, method: 'DELETE'
    },
      );
    }
  const searchUsers = (
    searchRequest: SearchRequest,
 ) => {
      return axiosInstanceFunc<PageUserAccountInfo>(
      {url: `/api/tenant/users/search`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: searchRequest
    },
      );
    }
  const getUser = (
    userId: string,
 ) => {
      return axiosInstanceFunc<UserAccountInfo>(
      {url: `/api/tenant/users/${userId}`, method: 'GET'
    },
      );
    }
  const removeUser = (
    userId: string,
 ) => {
      return axiosInstanceFunc<void>(
      {url: `/api/tenant/users/${userId}`, method: 'DELETE'
    },
      );
    }
  return {updateUserRoles,createUser,addRole,removeRole,searchUsers,getUser,removeUser}};
export type UpdateUserRolesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getTenantUserAdminController>['updateUserRoles']>>>
export type CreateUserResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getTenantUserAdminController>['createUser']>>>
export type AddRoleResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getTenantUserAdminController>['addRole']>>>
export type RemoveRoleResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getTenantUserAdminController>['removeRole']>>>
export type SearchUsersResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getTenantUserAdminController>['searchUsers']>>>
export type GetUserResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getTenantUserAdminController>['getUser']>>>
export type RemoveUserResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getTenantUserAdminController>['removeUser']>>>
